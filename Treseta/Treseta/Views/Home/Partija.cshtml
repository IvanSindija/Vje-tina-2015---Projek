<h1>@ViewData["imeSobe"]</h1>
<div>
    <h3 id="igrac3">igrac3 </h3>
    <label id="igrac2">igrac2</label>
    <canvas id="myCanvas" width="1100" height="700" style="border:1px solid #000000;"></canvas>
    <label id="igrac4">igrac4</label>
    <h3 id="igrac1">@ViewData["korisnickoIme"]</h3>
</div>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
</div>

<div id="chatBox" style="overflow-y: scroll; height:400px; border:1px solid #000000;">
    <ul id="discussion"></ul>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.multiplayerHub;
            var name = @Html.Raw(Json.Encode(ViewData["korisnickoIme"]));
            var imeSobe = @Html.Raw(Json.Encode(ViewData["imeSobe"]));
            var c=document.getElementById("myCanvas");
            var ctx=c.getContext("2d");

            //mozda budem koristio za detekciju pozicije misa na platnu
            var canvasOffset = $("#myCanvas").offset();
            var offsetX = canvasOffset.left;
            var offsetY = canvasOffset.top;

            //korisnik napustio usrid partije
            chat.client.pizda = function (name) {
                alert(name+"je napustio partiju");
                //vrati ih u glavni izborink!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            };

            //servaer javlja da je korisnik napustio sobu
            chat.client.onUserDisconnected = function (name,brojIgraca) {
                $('#discussion').prepend('<li><strong>' + htmlEncode(name)
                   + '</strong>: ' + htmlEncode(" je napustio sobu") + '</li>');
                $('#igrac'+brojIgraca).val("otisao");
            };

            //servaer javlja da se korisnik spojio u sobu
            chat.client.onNewUserConnected = function (name , brojIgraca) {
                $('#discussion').prepend('<li><strong>' + htmlEncode(name)
                   + '</strong>: ' + htmlEncode(" se pridruzio sobi") + '</li>');
                $('#igrac'+brojIgraca).text(name);
            };

            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').prepend('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            chat.client.zapocniIgru = function(){
                for(i=0;i<10;i++)
                    ctx.fillRect(100+(i*100),590,70,100);
            };
            // Start the connection.
            $.connection.hub.start().done(function () {


                //spojin se u sobu
                chat.server.joinRoom(name , imeSobe);

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.sendMessage(name,  imeSobe , $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

